{"version":3,"file":"ng-dialog-flow.js.map","sources":["ng://ng-dialog-flow/lib/ng-dialog-flow.constant.ts","ng://ng-dialog-flow/lib/ng-dialog-flow.service.ts","ng://ng-dialog-flow/lib/ng-dialog-flow.component.ts","ng://ng-dialog-flow/lib/ng-dialog-flow.module.ts"],"sourcesContent":["\nexport {SEARCH_NAME, SEARCH_PARAMETER, EXPECTED_RESULT, TOKEN };\n\nconst SEARCH_NAME = 'v';\nconst SEARCH_PARAMETER = '20150910';\n\nconst EXPECTED_RESULT = 'application/json';\n\nconst TOKEN = {\n    token: 'string'};","import { Injectable , Inject} from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport { Result } from './ng-dialog-flow.interface'; // result\n// import { Observable } from 'rxjs'; // rxjs observable\nimport {SEARCH_NAME, SEARCH_PARAMETER, EXPECTED_RESULT, TOKEN } from './ng-dialog-flow.constant';\n// import constant\nconst url = 'https://api.dialogflow.com/v1/query' ;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgDialogFlowService {\n\n  constructor(@Inject('config') private config , public http: HttpClient, ) {\n\n\n  }\n  // askQuestion is basically used to send text API\n public  askQuestion(message: string, timezone?: string, sessionid?: string, lang?: string): any{\nconst timeZone = timezone ? timezone : 'America/New_York'; // timezone\nconst sessionId = sessionid ? sessionid : '12345'; // sessionId\nconst language = lang ? lang : 'en'; // set language\n    const postParams = {\n      'lang': language,\n     'query': message ,\n     'sessionId': sessionId,\n     'timezone': timeZone\n     };\n     // post paramter\n     const params =  new HttpParams()\n     .set(SEARCH_NAME, SEARCH_PARAMETER);\n     // set query parameter 20150910\n     const header = new HttpHeaders().set('Accept', 'application/json')\n    .set('Content-Type', EXPECTED_RESULT)\n    .set('Authorization', `Bearer ${this.config.token}`);\n    // setting header json, authorization\n   return  this.http.post<Result>(url, postParams, {\n      params: params,\n      headers: header\n    });\n    // sending a post request which return all in the result interface  tool used to \n    // convert json result to an interface is called json to Ts (vscode library)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-dialogFlow',\n  template: `\n    <p>\n      ng-dialog-flow works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgDialogFlowComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgDialogFlowComponent } from './ng-dialog-flow.component';\nimport { HttpClientModule} from '@angular/common/http';\nimport { NgDialogFlowService } from '../public_api';\n@NgModule({\n  imports: [\n    HttpClientModule,\n  ],\n  declarations: [NgDialogFlowComponent],\n  exports: [NgDialogFlowComponent]\n})\nexport class NgDialogFlowModule {\n  public static forRoot(config): ModuleWithProviders {\nreturn {\n  ngModule : NgDialogFlowModule,\n  providers: [\n    NgDialogFlowService,\n    {provide : 'config', useValue: config}\n  ]\n};\n  }\n}\n"],"names":["NgDialogFlowModule"],"mappings":";;;;;;;AACA;AAEA,MAAM,WAAW,GAAG,GAAG,CAAC;;AACxB,MAAM,gBAAgB,GAAG,UAAU,CAAC;;AAEpC,MAAM,eAAe,GAAG,kBAAkB,CAAC;;AAE3C,MAAM,KAAK,GAAG;IACV,KAAK,EAAE,QAAQ;CAAC;;;;;;ACTpB;AAOA,MAAM,GAAG,GAAG,qCAAqC,CAAE;AAMnD;;;;;IAEE,YAAsC,MAAM,EAAU,IAAgB;QAAhC,WAAM,GAAN,MAAM,CAAA;QAAU,SAAI,GAAJ,IAAI,CAAY;KAGrE;;;;;;;;IAEM,WAAW,CAAC,OAAe,EAAE,QAAiB,EAAE,SAAkB,EAAE,IAAa;;QAC1F,MAAM,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,kBAAkB,CAAC;;QAC1D,MAAM,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,OAAO,CAAC;;QAClD,MAAM,QAAQ,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;;QAChC,MAAM,UAAU,GAAG;YACjB,MAAM,EAAE,QAAQ;YACjB,OAAO,EAAE,OAAO;YAChB,WAAW,EAAE,SAAS;YACtB,UAAU,EAAE,QAAQ;SACnB,CAAC;;QAEF,MAAM,MAAM,GAAI,IAAI,UAAU,EAAE;aAC/B,GAAG,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;;QAEpC,MAAM,MAAM,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC;aAClE,GAAG,CAAC,cAAc,EAAE,eAAe,CAAC;aACpC,GAAG,CAAC,eAAe,EAAE,UAAU,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;;QAEtD,OAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,GAAG,EAAE,UAAU,EAAE;YAC7C,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,MAAM;SAChB,CAAC,CAAC;;;;;;YAhCN,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;4CAIc,MAAM,SAAC,QAAQ;YAbrB,UAAU;;;;;;;;ACFnB;IAaE,iBAAiB;;;;IAEjB,QAAQ;KACP;;;YAdF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;;;GAIT;gBACD,MAAM,EAAE,EAAE;aACX;;;;;;;;;ACVD;;;;;IAYS,OAAO,OAAO,CAAC,MAAM;QAC9B,OAAO;YACL,QAAQ,EAAGA,qBAAkB;YAC7B,SAAS,EAAE;gBACT,mBAAmB;gBACnB,EAAC,OAAO,EAAG,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAC;aACvC;SACF,CAAC;;;;YAfD,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,gBAAgB;iBACjB;gBACD,YAAY,EAAE,CAAC,qBAAqB,CAAC;gBACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;aACjC;;;;;;;;;;;;;;;"}
