{"version":3,"sources":["ng://ng-dialog-flow/lib/ng-dialog-flow.constant.ts","ng://ng-dialog-flow/lib/ng-dialog-flow.service.ts","ng://ng-dialog-flow/lib/ng-dialog-flow.component.ts","ng://ng-dialog-flow/lib/ng-dialog-flow.module.ts"],"names":["SEARCH_PARAMETER","EXPECTED_RESULT","NgDialogFlowService","config","http","this","prototype","askQuestion","message","timezone","sessionid","lang","postParams","query","sessionId","params","HttpParams","set","header","HttpHeaders","token","post","headers","Injectable","args","providedIn","Inject","HttpClient","NgDialogFlowComponent","ngOnInit","Component","selector","template","styles","NgDialogFlowModule$$1","NgDialogFlowModule","ngModule","providers","provide","useValue","NgModule","imports","HttpClientModule","declarations","exports"],"mappings":"oVAGA,IACMA,EAAmB,WAEnBC,EAAkB,gCCStB,SAAAC,EAAsCC,EAAgBC,GAAhBC,KAAAF,OAAAA,EAAgBE,KAAAD,KAAAA,SAK/CF,EAAAI,UAAAC,qBAAYC,EAAiBC,EAAmBC,EAAoBC,GAC7E,IAGUC,EAAa,CACjBD,KAFWA,GAAc,KAG1BE,MAASL,EACTM,UALaJ,GAAwB,QAMrCD,SAPYA,GAAsB,oBAU5BM,GAAU,IAAIC,EAAAA,YACnBC,ID7Bc,IC6BGjB,GAEZkB,GAAS,IAAIC,EAAAA,aAAcF,IAAI,SAAU,oBAC/CA,IAAI,eAAgBhB,GACpBgB,IAAI,gBAAiB,UAAUZ,KAAKF,OAAOiB,OAE7C,OAAQf,KAAKD,KAAKiB,KA/BT,sCA+B2BT,EAAY,CAC7CG,OAAQA,EACRO,QAASJ,yBA/BdK,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,gFAKCC,EAAAA,OAAMF,KAAA,CAAC,mBAbbG,EAAAA,iKCFTC,EAAA,WAaE,SAAAA,YAEAA,EAAAtB,UAAAuB,SAAA,iCAbDC,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,gBACVC,SAAU,uDAKVC,OAAQ,+CATV,GCAAC,EAAA,gCAYgBC,EAAAA,iBAAQhC,GACxB,MAAO,CACLiC,SAAWD,EACXE,UAAW,CACTnC,EACA,CAACoC,QAAU,SAAUC,SAAUpC,0BAblCqC,EAAAA,SAAQhB,KAAA,CAAC,CACRiB,QAAS,CACPC,EAAAA,kBAEFC,aAAc,CAACf,GACfgB,QAAS,CAAChB,SATZ,0FHGoB,qDAKN,CACVR,MAAO","sourcesContent":["\nexport {SEARCH_NAME, SEARCH_PARAMETER, EXPECTED_RESULT, TOKEN };\n\nconst SEARCH_NAME = 'v';\nconst SEARCH_PARAMETER = '20150910';\n\nconst EXPECTED_RESULT = 'application/json';\n\nconst TOKEN = {\n    token: 'string'};","import { Injectable , Inject} from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport { Result } from './ng-dialog-flow.interface'; // result\n// import { Observable } from 'rxjs'; // rxjs observable\nimport {SEARCH_NAME, SEARCH_PARAMETER, EXPECTED_RESULT, TOKEN } from './ng-dialog-flow.constant';\n// import constant\nconst url = 'https://api.dialogflow.com/v1/query' ;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgDialogFlowService {\n\n  constructor(@Inject('config') private config , public http: HttpClient, ) {\n\n\n  }\n  // askQuestion is basically used to send text API\n public  askQuestion(message: string, timezone?: string, sessionid?: string, lang?: string): any{\nconst timeZone = timezone ? timezone : 'America/New_York'; // timezone\nconst sessionId = sessionid ? sessionid : '12345'; // sessionId\nconst language = lang ? lang : 'en'; // set language\n    const postParams = {\n      'lang': language,\n     'query': message ,\n     'sessionId': sessionId,\n     'timezone': timeZone\n     };\n     // post paramter\n     const params =  new HttpParams()\n     .set(SEARCH_NAME, SEARCH_PARAMETER);\n     // set query parameter 20150910\n     const header = new HttpHeaders().set('Accept', 'application/json')\n    .set('Content-Type', EXPECTED_RESULT)\n    .set('Authorization', `Bearer ${this.config.token}`);\n    // setting header json, authorization\n   return  this.http.post<Result>(url, postParams, {\n      params: params,\n      headers: header\n    });\n    // sending a post request which return all in the result interface  tool used to \n    // convert json result to an interface is called json to Ts (vscode library)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-dialogFlow',\n  template: `\n    <p>\n      ng-dialog-flow works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgDialogFlowComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgDialogFlowComponent } from './ng-dialog-flow.component';\nimport { HttpClientModule} from '@angular/common/http';\nimport { NgDialogFlowService } from '../public_api';\n@NgModule({\n  imports: [\n    HttpClientModule,\n  ],\n  declarations: [NgDialogFlowComponent],\n  exports: [NgDialogFlowComponent]\n})\nexport class NgDialogFlowModule {\n  public static forRoot(config): ModuleWithProviders {\nreturn {\n  ngModule : NgDialogFlowModule,\n  providers: [\n    NgDialogFlowService,\n    {provide : 'config', useValue: config}\n  ]\n};\n  }\n}\n"]}